Projekt:
läuft auf TomCat 8
Postgres Datenbank mit Hibernate Anbindung

Datenbank:
Benutzername: postgres
Passwort: user
Datenbankname: postgres

Da das War-File zu groß für U2l ist, habe ich es auf Github geladen:
https://github.com/DaniWi/E-Commerce

1.War-File von Github downloaden und in Eclipse importieren
2.gradle eclipse ausführen, um alle Dependencies herunterzuladen
3.in pgAdmin Datenbankfile importieren, damit Datenbank vorhanden ist
4.In Eclipse Server starten
5.Im Browser localhost:8080/E-Commerce/ aufrufen, somit landet man auf der Startseite
6.Im Browser localhost:8080/E-Commerce/rest/* aufrufen, um auf REST-Schnittstelle zuzugreifen
  Im Browser sind nur GET-Abfragen möglich.


REST-Schnittstelle:
GET rest/category							alle Kategorien
GET rest/category/{category}						alle Einträge der mitgegebenen Kategorie
GET rest/category/{category}/{item_index}				Eintrag mit ItemID=item_index
GET rest/category/{category}/{item_index}/comment			alle Kommentare von Item mit ItemID=item_index
GET rest/category/{category}/{item_index}/comment/{comment_index}	Kommentar mit CommentID=comment_index
GET rest/items								alle Items
GET rest/accounts							alle Accounts

alle GET liefern entweder HTML oder JSON retour, muss nur der accept-Eintrag im Header gesetzt werden

PUT rest/category/{category}						ändert Kategory mit Name in URI zu neuen Name im Parameter
Parameter: name
PUT rest/category/{category}/{item_index}				ändert einen Eintrag mit ID=item_index
Parameter: title, description
PUT rest/category/{category}/{item_index}/comment/{comment_index}	ändert ein Kommentar mit ID=comment_index
Parameter: text
PUT rest/accounts/{account_index}/toAdmin				ändert einen Account zum Admin
PUT rest/accounts/{account_index}/toUser				ändert einen Account zum User (ausser letzter Admin)

POST rest/category/{category}						legt neue Kategorie an mit Name in URI
POST rest/category/{category}/item					Legt neues Item an
Parameter: title, description
POST rest/category/{category}/{item_index}/comment			legt neues Kommentar an
Parameter: text

DELETE rest/category/{category}						löscht Kategorie mit name=category
DELETE rest/category/{category}/{item_index}				löscht Item mit ID=item_index
DELETE rest/category/{category}//{item_index}/comment/{comment_index}	löscht Kommentar mit ID=comment_index
DELETE rest/items/{item_index}						löscht Item mit ID=item_index
DELETE rest/accounts/{account_index}					löscht Account mit ID=account_index


Bei allen POST,PUT und DELETE Anfragen muss man als Parameter noch zusätzlich username und password mitgegeben, damit
nicht jeder alle Anfragen ausführen kann!!!!